@model ComplyRite.Web.MVC.Areas.MasterDataMgmt.Models.CheckMgmt.CheckModel_New

<!-- STYLES -->
<link href="~/Areas/MasterDataMgmt/Content/CSS/CheckManagement.css" rel="stylesheet" />

@using (Html.BeginForm("CreateNewCheck", "CheckManagement", FormMethod.Post, new { enctype = "multipart/form-data", id = "createNewCheckForm" }))
{
    <div class="form-horizontal">
        <h5>CREATE NEW CHECK</h5>
        <hr />
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" id="ViewBag_Feedback" value="@(ViewBag.Feedback)" />
        <input type="hidden" id="ViewBag_Color" value="@(ViewBag.Color)" />

        <!-- TITLE -->
        <div class="form-group">
            @Html.LabelFor(model => model.CheckTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- DESCRIPTION -->
        <div class="form-group">
            @Html.LabelFor(model => model.CheckDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row description-row">
                    <div class="input-field col s12">
                        @Html.TextAreaFor(model => model.CheckDescription, new { @class = "materialize-textarea" })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.CheckDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- IMAGE -->
        <div class="form-group">
            @Html.LabelFor(model => model.CheckImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="file-field input-field d-flex">
                    <div class="btn">
                        <span>Choose File</span>
                        @Html.TextBoxFor(m => m.CheckImageFile, new { @type = "file", @accept = "image/*", @id = "createNewCheckImage" })
                    </div>
                    <div class="file-path-wrapper">
                        <input class="file-path validate" type="text">
                    </div>
                    <div class="preview-image-container">
                        <i class="material-icons preview-image-not-available">image</i>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.CheckImageFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- TYPE -->
        <div class="form-group">
            @Html.LabelFor(model => model.CheckType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckType, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- SCORE -->
        <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "0.1", @min = "0", @max = "100" } })
                @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- ANSWER -->
        <div class="form-group">
            @Html.LabelFor(model => model.CheckAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CheckAnswer, new SelectList(new string[] { "Yes", "No" }), "Select Answer", new { @class = "browser-default" })
                @Html.ValidationMessageFor(model => model.CheckAnswer, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- ACTIONS -->
        <div class="form-group actions-panel">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default action-button" style="margin-right:10px;" />
                @Html.ActionLink("Back to List", "ViewChecks", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

<!-- SCRIPTS -->
<script src="~/Areas/MasterDataMgmt/Scripts/CheckManagement.js"></script>
<script>
    Header = {
        'UserName':'@ViewBag.UserName',
        'UUID':'@ViewBag.UUID',
        'UserId': '@ViewBag.UserId',
        'LOBCode': '@ViewBag.LOBCode',
        'ModuleCode':'@ViewBag.ModuleCode'
    };
</script>